//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CarTrackingModel", "FK_GeoPoints_Devices", "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CarTracking.Model.Device), "GeoPoint", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CarTracking.Model.GeoPoint), true)]
[assembly: EdmRelationshipAttribute("CarTrackingModel", "FK_Vehicles_Devices", "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CarTracking.Model.Device), "Vehicle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CarTracking.Model.Vehicle), true)]

#endregion

namespace CarTracking.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CarTrackingEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CarTrackingEntities object using the connection string found in the 'CarTrackingEntities' section of the application configuration file.
        /// </summary>
        public CarTrackingEntities() : base("name=CarTrackingEntities", "CarTrackingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CarTrackingEntities object.
        /// </summary>
        public CarTrackingEntities(string connectionString) : base(connectionString, "CarTrackingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CarTrackingEntities object.
        /// </summary>
        public CarTrackingEntities(EntityConnection connection) : base(connection, "CarTrackingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Device> Devices
        {
            get
            {
                if ((_Devices == null))
                {
                    _Devices = base.CreateObjectSet<Device>("Devices");
                }
                return _Devices;
            }
        }
        private ObjectSet<Device> _Devices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GeoPoint> GeoPoints
        {
            get
            {
                if ((_GeoPoints == null))
                {
                    _GeoPoints = base.CreateObjectSet<GeoPoint>("GeoPoints");
                }
                return _GeoPoints;
            }
        }
        private ObjectSet<GeoPoint> _GeoPoints;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vehicle> Vehicles
        {
            get
            {
                if ((_Vehicles == null))
                {
                    _Vehicles = base.CreateObjectSet<Vehicle>("Vehicles");
                }
                return _Vehicles;
            }
        }
        private ObjectSet<Vehicle> _Vehicles;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Devices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDevices(Device device)
        {
            base.AddObject("Devices", device);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GeoPoints EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGeoPoints(GeoPoint geoPoint)
        {
            base.AddObject("GeoPoints", geoPoint);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vehicles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVehicles(Vehicle vehicle)
        {
            base.AddObject("Vehicles", vehicle);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CarTrackingModel", Name="Device")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Device : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Device object.
        /// </summary>
        /// <param name="deviceId">Initial value of the DeviceId property.</param>
        public static Device CreateDevice(global::System.Int32 deviceId)
        {
            Device device = new Device();
            device.DeviceId = deviceId;
            return device;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeviceId
        {
            get
            {
                return _DeviceId;
            }
            set
            {
                if (_DeviceId != value)
                {
                    OnDeviceIdChanging(value);
                    ReportPropertyChanging("DeviceId");
                    _DeviceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DeviceId");
                    OnDeviceIdChanged();
                }
            }
        }
        private global::System.Int32 _DeviceId;
        partial void OnDeviceIdChanging(global::System.Int32 value);
        partial void OnDeviceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeviceSn
        {
            get
            {
                return _DeviceSn;
            }
            set
            {
                OnDeviceSnChanging(value);
                ReportPropertyChanging("DeviceSn");
                _DeviceSn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DeviceSn");
                OnDeviceSnChanged();
            }
        }
        private global::System.String _DeviceSn;
        partial void OnDeviceSnChanging(global::System.String value);
        partial void OnDeviceSnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CarTrackingModel", "FK_GeoPoints_Devices", "GeoPoint")]
        public EntityCollection<GeoPoint> GeoPoints
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GeoPoint>("CarTrackingModel.FK_GeoPoints_Devices", "GeoPoint");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GeoPoint>("CarTrackingModel.FK_GeoPoints_Devices", "GeoPoint", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CarTrackingModel", "FK_Vehicles_Devices", "Vehicle")]
        public EntityCollection<Vehicle> Vehicles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vehicle>("CarTrackingModel.FK_Vehicles_Devices", "Vehicle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vehicle>("CarTrackingModel.FK_Vehicles_Devices", "Vehicle", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CarTrackingModel", Name="GeoPoint")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GeoPoint : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GeoPoint object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="deviceId">Initial value of the DeviceId property.</param>
        /// <param name="latitude">Initial value of the Latitude property.</param>
        /// <param name="logitude">Initial value of the Logitude property.</param>
        /// <param name="heading">Initial value of the Heading property.</param>
        public static GeoPoint CreateGeoPoint(global::System.Int32 id, global::System.Int32 deviceId, global::System.Decimal latitude, global::System.Decimal logitude, global::System.Int32 heading)
        {
            GeoPoint geoPoint = new GeoPoint();
            geoPoint.Id = id;
            geoPoint.DeviceId = deviceId;
            geoPoint.Latitude = latitude;
            geoPoint.Logitude = logitude;
            geoPoint.Heading = heading;
            return geoPoint;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeviceId
        {
            get
            {
                return _DeviceId;
            }
            set
            {
                OnDeviceIdChanging(value);
                ReportPropertyChanging("DeviceId");
                _DeviceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeviceId");
                OnDeviceIdChanged();
            }
        }
        private global::System.Int32 _DeviceId;
        partial void OnDeviceIdChanging(global::System.Int32 value);
        partial void OnDeviceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private global::System.Decimal _Latitude;
        partial void OnLatitudeChanging(global::System.Decimal value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Logitude
        {
            get
            {
                return _Logitude;
            }
            set
            {
                OnLogitudeChanging(value);
                ReportPropertyChanging("Logitude");
                _Logitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Logitude");
                OnLogitudeChanged();
            }
        }
        private global::System.Decimal _Logitude;
        partial void OnLogitudeChanging(global::System.Decimal value);
        partial void OnLogitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Heading
        {
            get
            {
                return _Heading;
            }
            set
            {
                OnHeadingChanging(value);
                ReportPropertyChanging("Heading");
                _Heading = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Heading");
                OnHeadingChanged();
            }
        }
        private global::System.Int32 _Heading;
        partial void OnHeadingChanging(global::System.Int32 value);
        partial void OnHeadingChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CarTrackingModel", "FK_GeoPoints_Devices", "Device")]
        public Device Device
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("CarTrackingModel.FK_GeoPoints_Devices", "Device").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("CarTrackingModel.FK_GeoPoints_Devices", "Device").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Device> DeviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("CarTrackingModel.FK_GeoPoints_Devices", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Device>("CarTrackingModel.FK_GeoPoints_Devices", "Device", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CarTrackingModel", Name="Vehicle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vehicle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vehicle object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="licensePlate">Initial value of the LicensePlate property.</param>
        /// <param name="latitude">Initial value of the Latitude property.</param>
        /// <param name="longtitude">Initial value of the Longtitude property.</param>
        /// <param name="deviceId">Initial value of the DeviceId property.</param>
        public static Vehicle CreateVehicle(global::System.Int32 id, global::System.String licensePlate, global::System.Decimal latitude, global::System.Decimal longtitude, global::System.Int32 deviceId)
        {
            Vehicle vehicle = new Vehicle();
            vehicle.Id = id;
            vehicle.LicensePlate = licensePlate;
            vehicle.Latitude = latitude;
            vehicle.Longtitude = longtitude;
            vehicle.DeviceId = deviceId;
            return vehicle;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LicensePlate
        {
            get
            {
                return _LicensePlate;
            }
            set
            {
                OnLicensePlateChanging(value);
                ReportPropertyChanging("LicensePlate");
                _LicensePlate = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LicensePlate");
                OnLicensePlateChanged();
            }
        }
        private global::System.String _LicensePlate;
        partial void OnLicensePlateChanging(global::System.String value);
        partial void OnLicensePlateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private global::System.Decimal _Latitude;
        partial void OnLatitudeChanging(global::System.Decimal value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Longtitude
        {
            get
            {
                return _Longtitude;
            }
            set
            {
                OnLongtitudeChanging(value);
                ReportPropertyChanging("Longtitude");
                _Longtitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longtitude");
                OnLongtitudeChanged();
            }
        }
        private global::System.Decimal _Longtitude;
        partial void OnLongtitudeChanging(global::System.Decimal value);
        partial void OnLongtitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeviceId
        {
            get
            {
                return _DeviceId;
            }
            set
            {
                OnDeviceIdChanging(value);
                ReportPropertyChanging("DeviceId");
                _DeviceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeviceId");
                OnDeviceIdChanged();
            }
        }
        private global::System.Int32 _DeviceId;
        partial void OnDeviceIdChanging(global::System.Int32 value);
        partial void OnDeviceIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CarTrackingModel", "FK_Vehicles_Devices", "Device")]
        public Device Device
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("CarTrackingModel.FK_Vehicles_Devices", "Device").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("CarTrackingModel.FK_Vehicles_Devices", "Device").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Device> DeviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("CarTrackingModel.FK_Vehicles_Devices", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Device>("CarTrackingModel.FK_Vehicles_Devices", "Device", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
